name: Deploy to Beta

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  APP_NAME: DeploymentTest
  TARGET_HOST: ${{ secrets.TARGET_HOST_BETA }}
  TARGET_PORT: ${{ secrets.TARGET_PORT_BETA }}
  TARGET_USERNAME: ${{ secrets.USERNAME_BETA }}
  SERVICE_NAME: test-app
  
jobs:
  deployment:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x' 
    - run: dotnet publish ${{env.APP_NAME}} -o publish --configuration Release
    
    - name: Deploy
      uses: appleboy/scp-action@master
      env:
        HOST: ${{env.TARGET_HOST}}
        USERNAME: ${{env.TARGET_USERNAME}}
        PORT: ${{env.TARGET_PORT}}
        KEY: ${{ secrets.SSH_BETA }}
      with:
        source: "publish"
        target: "/var/www/${{env.APP_NAME}}"
        strip_components: 1
        
    - name: Restart service
      uses: appleboy/ssh-action@master
      with:
        HOST: ${{env.TARGET_HOST}}
        USERNAME: ${{env.TARGET_USERNAME}}
        PORT: ${{env.TARGET_PORT}}
        KEY: ${{ secrets.ssh_beta }}
        script: |
          IS_ACTIVE=$(sudo systemctl is-active ${{env.SERVICE_NAME}})
          if [ "$IS_ACTIVE" == "active" ]; then
              # restart the service
              echo "Service is running"
              echo "Restarting service"
              sudo systemctl restart ${{env.SERVICE_NAME}}
              echo "Service restarted"
          else
              # create service file
              echo "Creating service file"
              sudo cat > /etc/systemd/system/${${{env.SERVICE_NAME}}//'"'/}.service << EOF
          [Unit]
          Description=${{env.SERVICE_NAME}}
          After=network.target
          [Service]
          User=root
          WorkingDirectory=/var/www/${{APP_NAME}}
          ExecStart=/var/www/${{APP_NAME}}/${{APP_NAME}}
          ExecStop=/bin/kill $MAINPID
          KillSignal=SIGINT
          Restart=always
          RestartSec=10
          UMask=0002
          StandardOutput=null
          Environment=ASPNETCORE_ENVIRONMENT=Production
          Environment=DOTNET_PRINT_TELEMETRY_MESSAGE=false
          [Install]
          WantedBy=multi-user.target
          EOF
              echo "Reloading daemon and enabling service"
              sudo systemctl daemon-reload 
              sudo systemctl enable ${${{env.SERVICE_NAME}}//'.service'/} # remove the extension
              sudo systemctl start ${${{env.SERVICE_NAME}}//'.service'/}
              echo "Service Started"
          fi
